<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.6.6</version> <!-- lookup parent from repository -->
	</parent>
	<groupId>co.edu.uniandes.metricascalidadspringboot</groupId>
	<artifactId>MetricasCalidadSpringBoot</artifactId>
	<version>1.0.0</version>
	<packaging>${packaging.type}</packaging>
	<name>MetricasCalidadSpringBoot</name>
	<description>MetricasCalidadSpringBoot</description>

	<repositories>
		<repository>
			<id>rmatiz</id>
			<url>https://pkgs.dev.azure.com/rmatiz/_packaging/rmatiz/maven/v1</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>
	
	<!-- PERFILES DE COMPILACION -->
	<profiles>

		<!-- PERFIL Azure -->
		<!-- COMANDO: mvn clean install -P k8s -DskipTests -->
		<profile>
			<id>k8s</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<packaging.type>jar</packaging.type>
				<activatedProperties>k8s</activatedProperties>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.6.0</version>
						<executions>
							<!--  Create new docker image using Dockerfile which must be present in current working directory.
                                 Tag the image using maven project version information. -->
							<execution>
								<id>docker-build</id>
								<phase>install</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>docker</executable>
									<workingDirectory>${project.basedir}</workingDirectory>
									<arguments>
										<argument>build</argument>
										<argument>-t</argument>
										<argument>metricascalidadspringboot:${project.version}</argument>
										<argument>.</argument>
									</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- PERFIL DEV -->
		<!-- COMANDO: mvn clean install -P dev -DskipTests -->
		<profile>
			<id>dev</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<packaging.type>jar</packaging.type>
				<activatedProperties>dev</activatedProperties>
			</properties>
			<build>
				<plugins>
                  <plugin>
                  <groupId>org.jacoco</groupId>
                  <artifactId>jacoco-maven-plugin</artifactId>
                  <version>0.8.7</version>
            		<executions>
            			<execution>
            				<goals>
            					<goal>prepare-agent</goal>
            				</goals>
            			</execution>
            			<!-- attached to Maven test phase -->
            			<execution>
            				<id>report</id>
            				<phase>test</phase>
            				<goals>
            					<goal>report</goal>
            				</goals>
            			</execution>
            		</executions>
                  </plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.6.0</version>
						<executions>
							<!--  Create new docker image using Dockerfile which must be present in current working directory.
                                 Tag the image using maven project version information. -->
							<execution>
								<id>docker-build</id>
								<phase>install</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>docker</executable>
									<workingDirectory>${project.basedir}</workingDirectory>
									<arguments>
										<argument>build</argument>
										<argument>-t</argument>
										<argument>metricascalidadspringboot:${project.version}</argument>
										<argument>.</argument>
									</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- PERFIL DE PRODUCCION -->
		<!-- COMANDO: mvn clean install -P prod -DskipTests -->
		<profile>
			<id>prod</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<packaging.type>war</packaging.type>
				<activatedProperties>prod</activatedProperties>
			</properties>

			
		</profile>

	</profiles>

	<properties>
        <java.version>8</java.version>
        <spring-cloud.version>2021.0.3</spring-cloud.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-openfeign</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
		    <groupId>org.postgresql</groupId>
		    <artifactId>postgresql</artifactId>
		    <version>42.5.0</version>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.modelmapper</groupId>
			<artifactId>modelmapper</artifactId>
			<version>3.1.0</version>
		</dependency>
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-ui</artifactId>
			<version>1.6.9</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security.oauth</groupId>
			<artifactId>spring-security-oauth2</artifactId>
			<version>2.3.8.RELEASE</version>
		</dependency>

		<!-- Pruebas Unitarias-->
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>4.6.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.13.2</version>
			<scope>test</scope>
		</dependency>
		<!-- Pruebas Unitarias-->
		<dependency>
			<groupId>co.edu.uniandes.commons</groupId>
			<artifactId>SportAppCommons</artifactId>
			<version>[1.0.0,)</version>
		</dependency>
      <!-- https://mvnrepository.com/artifact/org.mockito/mockito-core -->
      <dependency>
          <groupId>org.mockito</groupId>
          <artifactId>mockito-core</artifactId>
          <version>2.26.0</version>
          <scope>test</scope>
      </dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
